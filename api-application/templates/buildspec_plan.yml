#This solution, non-production-ready template describes AWS Codepipeline based CICD Pipeline for terraform code deployment.
#Â© 2022 Amazon Web Services, Inc. or its affiliates. All Rights Reserved.
#This AWS Content is provided subject to the terms of the AWS Customer Agreement available at
#http://aws.amazon.com/agreement or other written agreement between Customer and either
#Amazon Web Services, Inc. or Amazon Web Services EMEA SARL or both.

version: 0.2
# Ubuntu standard:6.0
env:
  variables:
    CODE_SRC_DIR: "."
    TF_VERSION: "1.1.6"
    AWS_ACCOUNT_ID: "397748281750"
    IMAGE_REPO_NAME: "flask-sample-app"
    IMAGE_TAG: "1.1"

phases:
  install:
    runtime-versions:
      python: 3.10
  #   commands:
  #     - "echo starting ECR login"
  # pre_build:
  #     commands:
  #       - echo Logging in to Amazon ECR...
  #       - aws ecr get-login-password --region "${AWS_DEFAULT_REGION}" | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
  build:
    commands:
      - if aws ecr describe-repositories --repository-name ${IMAGE_REPO_NAME} --region ${AWS_DEFAULT_REGION}; then echo "ECR repo exists. Continuing without repo creation"; else aws ecr create-repository  --repository-name ${IMAGE_REPO_NAME} --region ${AWS_DEFAULT_REGION}; fi
      - echo Logging in to Amazon ECR...
      - "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      - "echo ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      - "cd ${CODEBUILD_SRC_DIR}/${CODE_SRC_DIR}"
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
      - sed -i -e "s|imagename|${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG|g"  k8s-deployment.yml
      - cat k8s-deployment.yml
artifacts:
  files:
    - '**/*'
